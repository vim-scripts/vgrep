diff -ur -X c:\cpp_diff.ext grep20d\grep.c grep20f\grep.c
--- grep20d\grep.c	Fri Jan 26 20:37:22 2001
+++ grep20f\grep.c	Mon Sep 30 11:51:18 2002
@@ -319,6 +319,7 @@
 static int out_byte;										 /* Print byte offsets. */
 static int out_before;									 /* Lines of leading context. */
 static int out_after;									 /* Lines of trailing context. */
+static int out_wide;   		/* Print filename in wide form */
 
 /* Internal variables to keep track of byte count, context, etc. */
 static size_t totalcc;									 /* Total character count before bufbeg. */
@@ -330,6 +331,9 @@
 static int pending;										 /* Pending lines of output. */
 static int list_files;
 
+static int prheader=1;          /* print file header */
+static char lastname[256];      /* last file header */
+
 static void
 nlscan(lim)
 char *lim;
@@ -349,10 +353,26 @@
 char sep;
 char * NAME;
 {
-	if ( out_file )
-		printf("%s%c", NAME, sep);
+	if ( out_file ) {
+
+                if ( out_wide ) {
+                   if ( prheader )  {
+                     printf("File: %s\n",NAME);
+                     strcpy(lastname,NAME);
+                     prheader = 0;
+                   } else {
+                     if (strcmp(lastname,NAME))
+                         prheader = 1;
+                   }
+                }
+                else printf("%s%c", NAME, sep);
+
+        }
 	if ( out_line ) {
 		nlscan(beg);
+                if (out_wide)
+		  printf("%d%c\t", ++totalnl, sep);
+                else
 		printf("%d%c", ++totalnl, sep);
 		lastnl = lim;
 	}
@@ -537,10 +557,12 @@
 	return (nlines);
 }
 
-static char version[] = "GNU grep version 2.0d";
+#define VERSION "2.0f"
+static char version[] = "GNU grep version "VERSION;
 
 #define USAGE \
-  "usage: %s [-[[AB] ]<num>] [-[CEFGLSVbchilnqsvwx?]] [-[ef]] <expr> [<files...>]\n" \
+  "GNU grep version "VERSION"\n" \
+  "usage:%s [-[[AB]]<num>][-[CEFGLSVbchilnqsvwxz?]][-[ef]]<expr>[<files...>]\n" \
      "Win32 port by Tim Charron (http://www.interlog.com/~tcharron/grep.html)\n"
 
 static void
@@ -618,6 +640,7 @@
 	printf("    constituent character.  Word-constituent characters are letters, digits,\n");
 	printf("    and the underscore.\n");
 	printf("-x  Select only those matches that exactly match the whole line.\n");
+        printf("-z  Prefix wide context display filename in whole line\n");
 	printf("-?  Displays this help.\n\n");
 	printf("Win32 port with subdirectory search created by Tim Charron\n");
 	printf("(full source available at http://www.interlog.com/~tcharron/grep.html)\n");
@@ -740,6 +763,7 @@
 	size_t keycc, oldcc, keyalloc;
 	int keyfound, count_matches, no_filenames, suppress_errors;
 	int opt, cc, desc, count, status;
+ 	char curdir[512];
 	FILE *fp;
 	extern char *optarg;
 	extern int optind;
@@ -758,7 +782,7 @@
 	globalsubdirs = 0;
 	matcher = NULL;
 
-	while ( (opt = getopt(argc, argv, "0123456789A:B:CEFGVSX?:bce:f:hiLlnqsvwxy"))
+	while ( (opt = getopt(argc, argv, "0123456789A:B:CEFGVSX?:bce:f:hiLlnqsvwxyz"))
 			  != EOF )
 		switch ( opt ) {
 		case '0':
@@ -887,6 +911,9 @@
 		case 'x':
 			match_lines = 1;
 			break;
+                case 'z':
+                        out_wide = 1;
+                        break;
 		case '?':
 			help();
 			return (2);
@@ -942,9 +969,13 @@
 					}
 				} else {
 					// No path provided...
-					if ( !recurse(".",argv[optind],suppress_errors,0, count_matches) ) status=0;	 // Files that match spec only
+                                        if (out_wide)
+ 					  GetCurrentDirectory(sizeof(curdir),curdir);
+                                        else
+                                          strcpy(curdir,".");
+					if ( !recurse(curdir,argv[optind],suppress_errors,0, count_matches) ) status=0;	 // Files that match spec only
 					if ( globalsubdirs ) {
-						if ( !recurse(".", argv[optind], suppress_errors, 1, count_matches) ) status=0;	 // Subdirs only
+						if ( !recurse(curdir, argv[optind], suppress_errors, 1, count_matches) ) status=0;	 // Subdirs only
 					}
 				}
 				if ( globalsubdirs && !out_quiet ) fprintf(stderr, "%-79s\r","");
